import numpy as np
import os
import random

BANNER = r'''
    .___             __
  __| _/____ _______|  | __ _____ _____  ________ ____
 / __ |\__  \\_  __ \  |/ //     \\__  \ \___   // __ \
/ /_/ | / __ \|  | \/    <|  Y Y  \/ __ \_/    /\  ___/
\____ |(____  /__|  |__|_ \__|_|  (____  /_____ \\___  >
     \/     \/           \/     \/     \/      \/    \/
'''

STR_MAP = '''
99999999999999999999999999999999999999999999999999999999999999999999999999999999
11111111116666600011111111111111111111111111111111111111111111111111111111111111
11111111116666600011111111111111111111111111111111111111111111111111111111111111
11111111116666600011111111111111111111111111111111111111111111111111111111111111
22299999996669999999999996666666666666666996669966666666996669996666666699999992
22299999996669966666666996666999999999666996669966699666996666666669966666666992
22299999996669966666666996666999999999666996669966699666996666666669966666666992
22299666666669966666666996666666666699666996669966699666996666666669966666666992
22299666666669966699666996666666666699666996669966699666996669999999999999666992
22299666666669966699666996666666666699666996669966699666996669999999999999666992
22299666999999966699666999999999666996666996669966699666996666666666666699666992
22299666999999966699666999999999666996666996669966699666996666666666666699666992
22299666996666666699666666666699666996666966666666699666996666666666666699666992
22299666996666666699666666666699666996666966666666699666999999999999966699666992
22299666996666666699666666666699666996666966666666699666999999999999966699666992
22299666996669999999999999966699666996666966669999966666666666666666666699666992
22299666996669999999999999966699666996666966669999966666666666666666666699666992
22266666996666666666666669966699666996666966666669966666666666666666666699666992
22266666996666666666666669966699666996666966666669966699999999999999999999666662
22266666996666666666666669966699666996666966666669966699999999999999999999666662
22266999999999999999996669966699666996666999996669966699966666666666666666666662
22266999999999999999996669966699666996666666666669966699666666666666666666666992
22266666666666666666996669966699666996666666666669966699666666666666666666666662
22266666666666666666996669966699666696666666666669966699666999966699996666666662
22266666666666666666996669966699666699666999996669966699666996666666999999666662
22299999999999999666666669966666666699666999996669966699666996666666999999999992
22222222222222222222222222222222222222222222222222222222222222266222222222222222
22222222222222222222222222222222222222222222222222222222222222266222222222222222
22222222222222222222222222222222222222222222222222222222222222266222222222222222
22299999999999999999999999996666666699666666666669966666666992266666669999999992
22266666666666666666666666996669966699996669996669966699666992266666669999999992
22266666666666666666666666996669966699996669996669966699666992222222266666666662
22266666666666666666666666996669966699996669996669966699666992222222266666666662
22266999999999999999999666996669966699996669996669966699666992222222266666666662
22266999999999999999999666996669966699996669996669966699666999999999999996666662
22266666666996666666666666666669966666666669966666666699666666666666666666666662
22266666666996666666666666666669966666666669966666666699666666666666666666666662
22266666666996666666666666666669966666666669966666666699666666666666666666666662
22299999666999999999999999999999999999999999999999999999999999999999999999999992
22299999666999999999999999999999999999999999999999999999999999999999999999999992
22299999666666666666666666666666666666666665559999999999999999999999999999999992
99999999666666666666666666666666666666666665559999999999999999999999999999999999
99999999666666666666666666666666666666666665559999999999999999999999999999999999
99999999999999999999999999999999999999999999999999999999999999999999999999999999
'''

MAP = np.array([[int(c) for c in line]
                for line in STR_MAP.strip().splitlines()],
               dtype=np.int8)

HEIGHT, WIDTH = MAP.shape
WIDTH -= 3

random.seed(os.urandom(64))

x, y = 0, 0


def round_width(y):
    while y < 1:
        y += WIDTH
    while 1 <= y - WIDTH:
        y -= WIDTH
    return y


def elevation(x, y):
    y = round_width(y)
    U, D = int(x - 1), int(x + 1)
    L, R = int(y - 1), int(y + 1)
    return MAP[U:D + 1, L:R + 1].max()


def game_init():
    global x, y
    x = 2
    y = random.randint(1, WIDTH)
    while elevation(x, y) != 1:
        y = random.randint(1, WIDTH)
    x += 0.5
    y += 0.5


dir_map = {
    'W': np.array([-1, 0]),
    'S': np.array([1, 0]),
    'A': np.array([0, -1]),
    'D': np.array([0, 1]),
}

if __name__ == '__main__':
    print(BANNER)
    print('You are now in a dark maze...')
    print('Find the path to the deepest part of the maze!')

    game_init()
    direction = ''
    while True:
        direction = input('> ').strip().upper()

        if len(direction) != 1 or direction not in 'WASD':
            print('Invalid input, you can only input W, A, S or D!')
            continue

        dx, dy = dir_map[direction] * round(random.random(), 5)

        now = elevation(x, y)
        toward = elevation(x + dx, y + dy)

        if (min(now, toward) == 0 or now >= toward) and toward < 9:
            x = x + dx
            y = round_width(y + dy)
            dis = max(abs(dx), abs(dy))
            print(f'Moved forward... {dis:.5f}')

            if min(now, toward) != 0 and now != toward:
                print('[CLICK]')
        else:
            print('Cannot move forward!')

        if elevation(x, y) == 5:
            print('GZTime: Congratulation! You solved the maze!')
            print('GZTime: Here is your gift ', os.environ['GZCTF_FLAG'])
            break
